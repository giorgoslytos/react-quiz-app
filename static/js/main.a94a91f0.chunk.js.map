{"version":3,"sources":["components/QuizData.js","components/QuizCard.jsx","components/Results.jsx","components/Quiz.jsx","index.js"],"names":["QuizData","id","question","options","answer","type","QuizCard","quiz","handleSelection","userAnswer","currentQuestion","handleNavigation","handleSubmission","useEffect","console","log","className","style","length","map","option","key","onChange","name","value","checked","readOnly","htmlFor","Array","isArray","includes","onClick","Results","handleAgainBtn","percentage","correctAnswers","calcPercentage","Math","round","Quiz","useState","setUserAnswer","setCurrentQuestion","setQuiz","finished","setFinished","shuffle","array","tmp","current","top","floor","random","arraysEqual","_arr1","_arr2","arr1","concat","sort","arr2","i","direction","setTimeout","forEach","ids","q","filter","x","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a94a91f0.chunk.js","sourcesContent":["const QuizData = [\r\n\t{\r\n\t\tid: 0,\r\n\t\tquestion: `NgRX uses the RxJS observables for Angular`,\r\n\t\toptions: [`True`, `False`],\r\n\t\tanswer: `True`,\r\n\t\ttype: `radio`\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\tquestion: `React Hooks were introduced in replacement for React Classes?`,\r\n\t\toptions: [`True`, `False`],\r\n\t\tanswer: `True`,\r\n\t\ttype: `radio`\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tquestion: `Select the only language that browsers can understand`,\r\n\t\toptions: [`JavaScript`, `Java`, `C#`, `Pascal`, `PHP`],\r\n\t\tanswer: `JavaScript`,\r\n\t\ttype: `radio`\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tquestion: `NodeJS is a runtime environment for JavaScript and not a separate language`,\r\n\t\toptions: [`True`, `False`],\r\n\t\tanswer: `True`,\r\n\t\ttype: `radio`\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tquestion: `Which of the following is a templating language for JavaScript?`,\r\n\t\toptions: [`EJS`, `JQuery`, `React`, `Ruby`],\r\n\t\tanswer: `EJS`,\r\n\t\ttype: `radio`\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tquestion: `FANG is consisted of which American technology companies?`,\r\n\t\toptions: [`Facebook`, `Amazon`, `Netflix`, `Google`, `Adobe`, `Apple`, `Accenture`, `Nokia`],\r\n\t\tanswer: [`Facebook`, `Amazon`, `Netflix`, `Google`],\r\n\t\ttype: `checkbox`\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tquestion: `Which of the following technologies are backend frameworks?`,\r\n\t\toptions: [`Django`, `Vue`, `EmberJS`, `Laravel`, `Spring`],\r\n\t\tanswer: [`Django`, `Laravel`, `Spring`],\r\n\t\ttype: `checkbox`\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tquestion: `The MERN stack is consisted of which technologies?`,\r\n\t\toptions: [`MongoDB`, `Express`, `React`, `NodeJS`, `EmberJS`, `MySQL`, `EJS`, `Ruby on Rails`],\r\n\t\tanswer: [`MongoDB`, `Express`, `React`, `NodeJS`],\r\n\t\ttype: `checkbox`\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tquestion: `The LAMP stack is consisted of which technologies?`,\r\n\t\toptions: [`Linux`, `Apache`, `MySQL`, `PHP`, `Angular`, `MongoDB`],\r\n\t\tanswer: [`Linux`, `Apache`, `MySQL`, `PHP`],\r\n\t\ttype: `checkbox`\r\n\t}\r\n];\r\nexport default QuizData;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst QuizCard = ({\r\n  quiz,\r\n  handleSelection,\r\n  userAnswer,\r\n  currentQuestion,\r\n  QuizData,\r\n  handleNavigation,\r\n  handleSubmission,\r\n  type,\r\n}) => {\r\n  useEffect(() => {\r\n    console.log(quiz);\r\n  }, []);\r\n  return (\r\n    <div className=\"card\" style={{}}>\r\n      <div className=\"card-body\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h5 className=\"card-title\">{quiz.question}</h5>\r\n          <p className=\"counter\">{`${currentQuestion + 1} out of ${\r\n            QuizData.length\r\n          }`}</p>\r\n        </div>\r\n        <form>\r\n          {quiz &&\r\n            type === 'radio' &&\r\n            quiz.options.map((option) => {\r\n              return (\r\n                <div\r\n                  className=\"form-check p-0\"\r\n                  key={option}\r\n                  onChange={() => handleSelection(quiz.id, option)}\r\n                >\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name={option}\r\n                    id={quiz.question + option}\r\n                    value={quiz.question + option}\r\n                    checked={userAnswer[quiz.id] === option}\r\n                    readOnly\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label btn btn-outline-secondary w-100 my-1\"\r\n                    htmlFor={quiz.question + option}\r\n                  >\r\n                    {option}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          {quiz &&\r\n            type === 'checkbox' &&\r\n            quiz.options.map((option) => {\r\n              return (\r\n                <div className=\"form-check p-0\" key={option}>\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name={option || ''}\r\n                    id={option}\r\n                    value={option}\r\n                    checked={\r\n                      userAnswer[quiz.id] &&\r\n                      Array.isArray(userAnswer[quiz.id]) &&\r\n                      userAnswer[quiz.id].includes(option)\r\n                    }\r\n                    readOnly\r\n                  />\r\n                  <label\r\n                    onClick={() => handleSelection(quiz.id, option)}\r\n                    className=\"form-check-label btn btn-outline-secondary w-100 my-1\"\r\n                    htmlFor={quiz.question + option}\r\n                  >\r\n                    {option}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n        </form>\r\n        <div className=\"buttons mt-3\">\r\n          {currentQuestion !== 0 ? (\r\n            <a\r\n              className=\"previous btn btn-info text-white\"\r\n              onClick={() => handleNavigation(-1)}\r\n            >\r\n              Previous\r\n            </a>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {currentQuestion < QuizData.length - 1 ? (\r\n            <a\r\n              className=\"next btn btn-info text-white\"\r\n              onClick={() => handleNavigation(1)}\r\n            >\r\n              Next\r\n            </a>\r\n          ) : (\r\n            <a\r\n              className=\"next btn btn-info text-white\"\r\n              onClick={() => handleSubmission()}\r\n            >\r\n              Submit All Answers\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCard;\r\n","import React from 'react';\r\n\r\nconst Results = ({\r\n  handleAgainBtn,\r\n  correctAnswers,\r\n  QuizData,\r\n  calcPercentage,\r\n}) => {\r\n  const percentage = calcPercentage();\r\n  return (\r\n    <div className=\"Results card\">\r\n      <div className=\"card-body text-center\">\r\n        <h4 className=\"card-title\">\r\n          Your result was : <span>{Math.round(percentage)}%</span>\r\n        </h4>\r\n        {percentage === 100 ? (\r\n          <h2 className=\"text-success\">Ace!!!</h2>\r\n        ) : percentage >= 85 ? (\r\n          <h2 className=\"text-success\">Excellent!</h2>\r\n        ) : percentage >= 75 ? (\r\n          <h2 className=\"text-success\">Very Good!</h2>\r\n        ) : percentage >= 60 ? (\r\n          <h2 className=\"text-success\">Good!</h2>\r\n        ) : percentage >= 50 ? (\r\n          <h2 className=\"text-success\">You pass!</h2>\r\n        ) : (\r\n          <h2 className=\"text-danger\">You failed ;(</h2>\r\n        )}\r\n        <a\r\n          className=\"btn btn-info text-white my-3\"\r\n          onClick={() => {\r\n            handleAgainBtn();\r\n          }}\r\n        >\r\n          Try again!\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport QuizData from './QuizData';\r\nimport QuizCard from './QuizCard';\r\nimport Results from './Results';\r\n// import QuizCard from './QuizCard';\r\n\r\nconst Quiz = () => {\r\n  const [userAnswer, setUserAnswer] = useState({});\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [quiz, setQuiz] = useState({\r\n    question: '',\r\n    options: [],\r\n    answer: '',\r\n    id: '',\r\n  });\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  // ASSIGN DATA TO STATE\r\n  const loadQuiz = () => {\r\n    if (currentQuestion < QuizData.length)\r\n      setQuiz({\r\n        id: QuizData[currentQuestion].id,\r\n        question: QuizData[currentQuestion].question,\r\n        options: [...QuizData[currentQuestion].options],\r\n        answer: QuizData[currentQuestion].answer,\r\n      });\r\n  };\r\n\r\n  // TYPICAL SHUFFLE FUNCTION\r\n  const shuffle = (array) => {\r\n    var tmp,\r\n      current,\r\n      top = array.length;\r\n    if (top)\r\n      while (--top) {\r\n        current = Math.floor(Math.random() * (top + 1));\r\n        tmp = array[current];\r\n        array[current] = array[top];\r\n        array[top] = tmp;\r\n      }\r\n    return array;\r\n  };\r\n\r\n  const arraysEqual = (_arr1, _arr2) => {\r\n    if (\r\n      !Array.isArray(_arr1) ||\r\n      !Array.isArray(_arr2) ||\r\n      _arr1.length !== _arr2.length\r\n    )\r\n      return false;\r\n    var arr1 = _arr1.concat().sort();\r\n    var arr2 = _arr2.concat().sort();\r\n    for (var i = 0; i < arr1.length; i++) {\r\n      if (arr1[i] !== arr2[i]) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // PREV NEXT BUTTONS\r\n  const handleNavigation = (direction) => {\r\n    setTimeout(() => {\r\n      setCurrentQuestion(currentQuestion + direction);\r\n    }, 50);\r\n  };\r\n\r\n  // CALC PERCENTAGE\r\n  const calcPercentage = () => {\r\n    let correctAnswers = 0;\r\n    const ids = QuizData.map((q) => q.id);\r\n    for (let i = 0; i < QuizData.length; i++) {\r\n      if (\r\n        Array.isArray(userAnswer[ids[i]]) &&\r\n        arraysEqual(userAnswer[ids[i]], QuizData[i].answer)\r\n      ) {\r\n        correctAnswers++;\r\n      } else {\r\n        if (userAnswer[ids[i]] === QuizData[i].answer) {\r\n          correctAnswers++;\r\n        }\r\n      }\r\n    }\r\n    return (correctAnswers / QuizData.length) * 100;\r\n  };\r\n\r\n  // SUBMIT ANSWERS\r\n  const handleSubmission = () => {\r\n    setFinished(true);\r\n  };\r\n\r\n  // INIT\r\n  useEffect(() => {\r\n    console.log(QuizData);\r\n    shuffle(QuizData);\r\n    QuizData.forEach((quiz) => shuffle(quiz.options));\r\n  }, []);\r\n\r\n  // NEXT QUESTION\r\n  useEffect(() => {\r\n    if (currentQuestion < QuizData.length)\r\n      setQuiz({\r\n        id: QuizData[currentQuestion].id,\r\n        question: QuizData[currentQuestion].question,\r\n        options: [...QuizData[currentQuestion].options],\r\n        answer: QuizData[currentQuestion].answer,\r\n      });\r\n  }, [currentQuestion]);\r\n\r\n  // ADD USER ANSWERS TO USERANSWER ARRAY\r\n  const handleRadioSelection = (id, option) => {\r\n    const tmp = { ...userAnswer };\r\n    tmp[id] = option;\r\n    setUserAnswer(tmp);\r\n  };\r\n\r\n  // ADD USER ANSWERS TO USERANSWER ARRAY\r\n  const handleCheckboxSelection = (id, option) => {\r\n    let tmp = { ...userAnswer };\r\n    if (userAnswer[id] && Array.isArray(userAnswer[id])) {\r\n      if (tmp[id].includes(option)) {\r\n        tmp[id] = tmp[id].filter((x) => x !== option);\r\n      } else tmp[id] = [...userAnswer[id], option];\r\n    } else tmp[id] = [option];\r\n    setUserAnswer(tmp);\r\n  };\r\n\r\n  // RE INIT\r\n  const handleAgainBtn = () => {\r\n    setFinished(false);\r\n    setCurrentQuestion(0);\r\n    setUserAnswer('');\r\n    loadQuiz();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"display-4 mb-4  mt-3 text-center\">Quiz App</h1>\r\n      {!finished ? (\r\n        QuizData[currentQuestion].type === 'radio' ? (\r\n          <QuizCard\r\n            quiz={quiz}\r\n            handleSelection={handleRadioSelection}\r\n            userAnswer={userAnswer}\r\n            currentQuestion={currentQuestion}\r\n            QuizData={QuizData}\r\n            handleNavigation={handleNavigation}\r\n            handleSubmission={handleSubmission}\r\n            type=\"radio\"\r\n          />\r\n        ) : (\r\n          <QuizCard\r\n            quiz={quiz}\r\n            handleSelection={handleCheckboxSelection}\r\n            userAnswer={userAnswer}\r\n            currentQuestion={currentQuestion}\r\n            QuizData={QuizData}\r\n            handleNavigation={handleNavigation}\r\n            handleSubmission={handleSubmission}\r\n            type=\"checkbox\"\r\n          />\r\n        )\r\n      ) : (\r\n        <Results\r\n          handleAgainBtn={handleAgainBtn}\r\n          QuizData={QuizData}\r\n          calcPercentage={calcPercentage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Quiz from './components/Quiz';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Quiz />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}